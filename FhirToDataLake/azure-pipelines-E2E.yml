name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
- main
- synapse
- refs/heads/synapse
pr:
- main
- synapse

variables:
  major: 0
  minor: 3
  patch: 0
  buildnum: $[counter(format('{0}.{1}.{2}',variables['major'],variables['minor'], variables['patch']), 1)]
  version: $(major).$(minor).$(patch).$(buildnum)

stages:
- stage: E2E
  pool:
    vmImage: windows-latest
  jobs:
  - job: E2ETest
    steps:
    - task: AzurePowerShell@5
      inputs: 
        azureSubscription: 'ResoluteOpenSource'
        azurePowerShellVersion: latestVersion
        ScriptType: inlineScript
        Inline: |
          Install-Module -Name Az.Synapse -Scope CurrentUser -Force

          $applicationId = (Get-AzContext).Account.Id
          $objectId = (Get-AzADServicePrincipal -ApplicationId $applicationId).Id

          $subscriptionId = (Get-AzContext).Subscription.Id

          $synapseId = (Get-AzSynapseWorkspace -Name $(synapseWorkspaceName) -ErrorAction Stop).identity.principalid
          
          $objectId
          $synapseId

          try {
            Write-Host $synapseId
            Write-Host "/subscriptions/$subscriptionId/resourceGroups/$(resourceGroup)/providers/Microsoft.Storage/storageAccounts/$(storageName)"

            New-AzRoleAssignment -ObjectID $synapseId `
              -ObjectType ServicePrincipal `
              -RoleDefinitionName "Storage Blob Data Contributor" `
              -Scope  "/subscriptions/$subscriptionId/resourceGroups/$(resourceGroup)/providers/Microsoft.Storage/storageAccounts/$(storageName)"
          }
          catch {
            Write-Host "Assign Storage Blob Data Contributor role to Synapse failed"
            Write-Host ($_ | ConvertTo-Json)
            throw 
          }

          try {
            New-AzRoleAssignment -ObjectID $objectId `
              -RoleDefinitionName "Storage Blob Data Contributor" `
              -Scope  "/subscriptions/$subscriptionId/resourceGroups/$(resourceGroup)/providers/Microsoft.Storage/storageAccounts/$(storageName)"
          }
          catch {
            Write-Host "Assign Storage Blob Data Contributor role to service connection principal account failed"
            Write-Host ($_ | ConvertTo-Json)
            throw 
          }

      displayName: Assign Azure roles for service connection and Synapse to the Storage

    - task: NuGetAuthenticate@0
      displayName: NuGet Authenticate

    - task: NuGetToolInstaller@1
      displayName: Use NuGet 5.11
      inputs:
        versionSpec: 5.11

    - script: |
       docker pull healthplatformregistry.azurecr.io/fhir-analytics-data-source:v0.0.1
       docker run --rm -d -p 5000:5000 --name mock-data-source healthplatformregistry.azurecr.io/fhir-analytics-data-source:v0.0.1
      displayName: Start mock-data-source

    - task: AzurePowerShell@5
      inputs: 
        azureSubscription: 'ResoluteOpenSource'
        azurePowerShellVersion: latestVersion
        ScriptType: inlineScript
        Inline: |
          $templateParameters = @{
              appName = "$(appName)"
              fhirServerUrl = "$(fhirServerUrl)"
          }

          New-AzResourceGroupDeployment -ResourceGroupName $(resourceGroup) -TemplateFile $(System.DefaultWorkingDirectory)/FhirToDataLake/deploy/templates/FhirSynapsePipelineTemplate.json -TemplateParameterObject $templateParameters -Verbose
      displayName: Deploy Fhir Synapse sync pipeline

    - powershell: 'Start-Sleep -s 400'
      displayName: Delay 6 mins to fetch data from FHIR server

    - task: AzurePowerShell@5
      inputs: 
        azureSubscription: 'ResoluteOpenSource'
        azurePowerShellVersion: latestVersion
        ScriptType: inlineScript
        Inline: |
          Stop-AzFunctionApp -Name $(appName) -ResourceGroupName $(resourceGroup) -Force
      displayName: Stop function to fetch data from FHIR server

    - task: Docker@2
      displayName: stop mock-data-source
      condition: succeededOrFailed()
      inputs:
        command: stop
        container: mock-data-source


- stage: E2ETest
  jobs:
  - job: ValidatorTest
    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python 3.7'
      inputs:
        versionSpec: '3.7'

    - script: pip install pyodbc
      displayName: 'Install pyodbc'

    - script: |
       docker pull healthplatformregistry.azurecr.io/fhir-analytics-data-source:v0.0.1
       docker run --rm -d -p 5000:5000 --name mock-data-source healthplatformregistry.azurecr.io/fhir-analytics-data-source:v0.0.1
      displayName: start mock-data-source

    - task: PythonScript@0
      inputs:
        scriptSource: filePath
        scriptPath: '$(Build.SourcesDirectory)/E2E/E2E_Validator.py'
        arguments: --SynapseWorkspaceName 'qwe' --FhirServerUrl $(fhirServerUrl) --Database "fhirdb" --SchemaCollectionDirectory  $(System.DefaultWorkingDirectory)/FhirToDataLake/data/schemas/
        
      env:
        STORAGE_CONNECTION_STRING: $(StorageConnectionString)
        SQL_USERNAME: $(SqlUsername)
        SQL_PASSWORD: $(SqlPassword)
    
    - task: Docker@2
      displayName: stop mock-data-source
      condition: succeededOrFailed()
      inputs:
        command: stop
        container: mock-data-source